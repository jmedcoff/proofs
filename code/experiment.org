#+BEGIN_SRC python :session
from math import ceil

def Sundaram(n):
    composites = set()
    bound = int(ceil((n-2)/2))
    for i in range(1, bound):
        for j in range(i, int(ceil((n-i)/(1+2*i)))):
            composites.add(2*i*j+i+j)
    
    return [2*a+1 for a in range(1,bound) if a not in composites]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
def Eratosthenes(n):
    a = []
    composites = set()
    for i in range(2, n+1):
        if i not in composites:
            a.append(i)
            composites.update(range(i**2, n+1, i))
    return a
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
import time
def time_algo(algo, n):
    start = time.time()
    algo(n)
    end = time.time()
    return end-start

#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
def time_trial(algo, iterbl):
    avgtimes = []
    for i in iterbl:
        totaltime = 0
        for j in range(50):
            totaltime += time_algo(algo, i)
        avgtimes.append(totaltime/50)
    return [iterbl, avgtimes]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
time_algo(Eratosthenes, 1000000)

#+END_SRC

#+RESULTS:
: 1.11093902588

#+BEGIN_SRC python :session
testrange = range(100, 10000, 100)
erat = time_trial(Eratosthenes, testrange)
sund = time_trial(Sundaram, testrange)
erat+sund
#+END_SRC

#+name: table1
#+RESULTS:
|  100 |  6.558895111083985e-05 | 0.00013251304626464843 |
|  200 |  0.0001244974136352539 |  0.0002749443054199219 |
|  300 | 0.00017647743225097657 |  0.0004252958297729492 |
|  400 | 0.00023999691009521484 |  0.0005943393707275391 |
|  500 |  0.0003148555755615234 |  0.0007531976699829101 |
|  600 | 0.00038813114166259767 |  0.0009376716613769532 |
|  700 |  0.0004781293869018555 |  0.0011159467697143554 |
|  800 |  0.0004933547973632813 |  0.0012924528121948241 |
|  900 |  0.0005620574951171875 |  0.0014814186096191407 |
| 1000 |  0.0006320381164550781 |  0.0016685914993286133 |
| 1100 |  0.0006859302520751953 |  0.0018333959579467773 |
| 1200 |  0.0007486391067504883 |   0.002012152671813965 |
| 1300 |  0.0008097553253173828 |  0.0022230815887451173 |
| 1400 |  0.0008684873580932617 |  0.0023861265182495116 |
| 1500 |  0.0009364604949951172 |   0.002575359344482422 |
| 1600 |  0.0009956979751586915 |  0.0027661371231079103 |
| 1700 |  0.0011028051376342773 |   0.002967729568481445 |
| 1800 |   0.001163640022277832 |   0.003170328140258789 |
| 1900 |   0.001215648651123047 |   0.003337860107421875 |
| 2000 |  0.0012995004653930664 |   0.003624882698059082 |
| 2100 |  0.0013414478302001952 |   0.003771047592163086 |
| 2200 |  0.0014341354370117187 |   0.003975739479064941 |
| 2300 |   0.001464853286743164 |  0.0041730117797851565 |
| 2400 |  0.0015363740921020509 |  0.0043551063537597655 |
| 2500 |  0.0015907716751098634 |    0.00457305908203125 |
| 2600 |  0.0016703271865844726 |   0.004743494987487793 |
| 2700 |   0.001721792221069336 |   0.005018906593322754 |
| 2800 |  0.0017773723602294922 |   0.005165610313415527 |
| 2900 |  0.0018378067016601562 |    0.00538142204284668 |
| 3000 |  0.0018997335433959962 |  0.0055322074890136715 |
| 3100 |   0.001958141326904297 |   0.005762410163879394 |
| 3200 |  0.0022059774398803713 |    0.00594200611114502 |
| 3300 |  0.0020775508880615232 |  0.0061334180831909176 |
| 3400 |  0.0021464347839355467 |   0.006347908973693848 |
| 3500 |  0.0022076988220214844 |   0.006521682739257812 |
| 3600 |  0.0023290252685546874 |   0.006782236099243164 |
| 3700 |   0.002332272529602051 |  0.0069478082656860354 |
| 3800 |  0.0023972129821777342 |   0.007129502296447754 |
| 3900 |   0.002494211196899414 |   0.007360367774963379 |
| 4000 |  0.0025373029708862303 |  0.0075739860534667965 |
| 4100 |    0.00260127067565918 |    0.00778925895690918 |
| 4200 |       0.00264404296875 |   0.007941226959228515 |
| 4300 |  0.0027199649810791017 |   0.008164677619934082 |
| 4400 |   0.002805352210998535 |   0.008370723724365235 |
| 4500 |  0.0028310775756835937 |    0.00866687297821045 |
| 4600 |   0.002902703285217285 |   0.008811635971069336 |
| 4700 |   0.002952837944030762 |   0.008991436958312988 |
| 4800 |      0.003162841796875 |   0.009196772575378417 |
| 4900 |  0.0030786848068237306 |   0.009387335777282714 |
| 5000 |  0.0031916046142578124 |    0.00963505744934082 |
| 5100 |   0.003260917663574219 |   0.009796509742736817 |
| 5200 |  0.0032709646224975586 |    0.01002960205078125 |
| 5300 |  0.0033475208282470704 |   0.010237436294555664 |
| 5400 |   0.003438272476196289 |   0.010470151901245117 |
| 5500 |  0.0034733343124389647 |   0.010664100646972657 |
| 5600 |  0.0035643243789672853 |   0.010843100547790528 |
| 5700 |   0.003602395057678223 |   0.011163339614868165 |
| 5800 |  0.0036624765396118166 |     0.0112908935546875 |
| 5900 |   0.003767566680908203 |   0.011497220993041991 |
| 6000 |   0.003871936798095703 |   0.011680383682250977 |
| 6100 |  0.0038618898391723634 |   0.011963772773742675 |
| 6200 |  0.0039943838119506836 |     0.0121071195602417 |
| 6300 |  0.0041944169998168945 |   0.012323403358459472 |
| 6400 |   0.004315872192382813 |   0.012637691497802734 |
| 6500 |   0.004369339942932129 |    0.01278684139251709 |
| 6600 |   0.004436388015747071 |   0.012987494468688965 |
| 6700 |   0.004487462043762207 |   0.013268356323242187 |
| 6800 |  0.0045280265808105465 |   0.013427104949951172 |
| 6900 |   0.004827289581298828 |   0.013623609542846679 |
| 7000 |   0.004685659408569336 |    0.01382457733154297 |
| 7100 |   0.004836893081665039 |   0.014133214950561523 |
| 7200 |    0.00484072208404541 |   0.014462175369262696 |
| 7300 |   0.005000367164611817 |   0.014753146171569824 |
| 7400 |   0.004941539764404297 |    0.01487140655517578 |
| 7500 |   0.005049238204956055 |   0.015149354934692383 |
| 7600 |  0.0050938653945922854 |   0.015480232238769532 |
| 7700 |   0.005192832946777344 |     0.0156181001663208 |
| 7800 |   0.005219759941101074 |   0.015814599990844728 |
| 7900 |   0.005377049446105957 |   0.016031403541564942 |
| 8000 |   0.005343642234802246 |   0.016237521171569826 |
| 8100 |   0.005456194877624511 |    0.01653839111328125 |
| 8200 |  0.0055139875411987305 |   0.016675047874450684 |
| 8300 |    0.00555570125579834 |   0.017057886123657228 |
| 8400 |   0.005709686279296875 |   0.017122044563293456 |
| 8500 |   0.005688300132751465 |   0.017350788116455077 |
| 8600 |   0.005845212936401367 |   0.017597465515136718 |
| 8700 |   0.005833339691162109 |   0.017841849327087402 |
| 8800 |   0.005920262336730957 |   0.018102192878723146 |
| 8900 |   0.006010198593139648 |    0.01824577331542969 |
| 9000 |   0.006036372184753418 |          0.01861328125 |
| 9100 |   0.006323456764221191 |   0.018709444999694826 |
| 9200 |   0.006213669776916504 |   0.018920183181762695 |
| 9300 |   0.006284289360046387 |   0.019124093055725096 |
| 9400 |  0.0064054298400878906 |   0.019494171142578124 |
| 9500 |  0.0063872671127319335 |   0.019546890258789064 |
| 9600 |   0.006498708724975586 |    0.01992009162902832 |
| 9700 |   0.006614799499511719 |   0.020021557807922363 |
| 9800 |   0.006637630462646485 |    0.02030710220336914 |
| 9900 |   0.006765322685241699 |   0.020494112968444823 |

#+BEGIN_SRC gnuplot :var data=table1 :file both1.png :results output
reset
plot data using 1:2 with lines title 'Eratosthenes', \
     data using 1:3 with lines title 'Sundaram';
#+END_SRC

#+RESULTS:
[[file:both1.png]]

