#+TITLE: Trial Division Algo for Paper

#+BEGIN_SRC python :session :results output
from math import floor, sqrt

def trialdivision(n):
    composites = set()
    for i in range(4, n):
        for j in range(2, i):
            if i % j == 0:
                composites.add(i)
    return [x for x in range(2,n) if x not in composites]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session :results output
trialdivision(100)

#+END_SRC

#+RESULTS:
: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]

#+BEGIN_SRC python :session
from math import ceil

def Sundaram(n):
    composites = set()
    bound = int(ceil((n-2)/2))
    for i in range(1, bound):
        for j in range(i, int(ceil((n-i)/(1+2*i)))):
            composites.add(2*i*j+i+j)
    
    return [2*a+1 for a in range(1,bound) if a not in composites]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
import time
def time_algo(algo, n):
    start = time.time()
    algo(n)
    end = time.time()
    return end-start

#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
def time_trial(algo, iterbl):
    avgtimes = []
    for i in iterbl:
        totaltime = 0
        for j in range(30):
            totaltime += time_algo(algo, i)
        avgtimes.append(totaltime/30)
    return [iterbl, avgtimes]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
testrange = range(10, 500, 10)
trdiv = time_trial(trialdivision, testrange)
sund = time_trial(Sundaram, testrange)
trdiv + sund
#+END_SRC

#+name: table1
#+RESULTS:
|  10 |  2.322196960449219e-05 | 1.5616416931152344e-05 |
|  20 |   6.43014907836914e-05 | 2.6965141296386717e-05 |
|  30 | 0.00013530254364013672 |  3.697872161865234e-05 |
|  40 |  0.0002214193344116211 |  5.166530609130859e-05 |
|  50 |  0.0003206968307495117 |  6.649494171142578e-05 |
|  60 | 0.00046520233154296876 |  8.077621459960938e-05 |
|  70 |  0.0005952119827270508 |  9.293556213378907e-05 |
|  80 |  0.0007622957229614258 | 0.00010612010955810547 |
|  90 |  0.0009415149688720703 | 0.00011923313140869141 |
| 100 |  0.0011430025100708009 | 0.00013508796691894532 |
| 110 |   0.001371312141418457 |  0.0001572847366333008 |
| 120 |  0.0015862703323364258 | 0.00017020702362060546 |
| 130 |  0.0018582820892333984 | 0.00017733573913574218 |
| 140 |   0.002150726318359375 |  0.0001909017562866211 |
| 150 |    0.00241549015045166 |   0.000205230712890625 |
| 160 |  0.0027395963668823244 | 0.00022389888763427735 |
| 170 |  0.0030844926834106444 | 0.00023560523986816407 |
| 180 |   0.003432822227478027 |  0.0002524852752685547 |
| 190 |   0.003813910484313965 | 0.00026357173919677734 |
| 200 |   0.004220318794250488 | 0.00028073787689208984 |
| 210 |   0.004627251625061035 |  0.0002933025360107422 |
| 220 |   0.005072593688964844 |  0.0003095388412475586 |
| 230 |   0.005507564544677735 |  0.0003224849700927734 |
| 240 |      0.006329345703125 | 0.00033926963806152344 |
| 250 |   0.006596899032592774 | 0.00035538673400878904 |
| 260 |    0.00727541446685791 |  0.0003701448440551758 |
| 270 |   0.007547640800476074 |   0.000386810302734375 |
| 280 |   0.008119845390319824 | 0.00040428638458251954 |
| 290 |   0.008813786506652831 | 0.00041730403900146483 |
| 300 |   0.009421610832214355 |  0.0004330873489379883 |
| 310 |   0.009913301467895508 |  0.0004493951797485352 |
| 320 |   0.010544013977050782 | 0.00046749114990234374 |
| 330 |    0.01126101016998291 |  0.0004910469055175781 |
| 340 |   0.011870574951171876 |  0.0004996061325073242 |
| 350 |     0.0126237154006958 |  0.0005124807357788086 |
| 360 |    0.01329941749572754 |  0.0005374908447265625 |
| 370 |   0.014061284065246583 |  0.0005469083786010742 |
| 380 |   0.014921474456787109 |  0.0005608320236206055 |
| 390 |   0.015589570999145508 |  0.0005924224853515625 |
| 400 |   0.016363239288330077 |  0.0005989789962768555 |
| 410 |    0.01721339225769043 |  0.0006147623062133789 |
| 420 |    0.01809980869293213 |  0.0006293535232543945 |
| 430 |   0.018826103210449217 |       0.00064697265625 |
| 440 |    0.01996943950653076 |  0.0006661176681518555 |
| 450 |   0.020649433135986328 |  0.0006820201873779297 |
| 460 |   0.021567392349243163 |  0.0006998777389526367 |
| 470 |   0.022480416297912597 |  0.0007133245468139649 |
| 480 |    0.02356083393096924 |  0.0007292509078979492 |
| 490 |    0.02445967197418213 |  0.0007522821426391602 |

#+BEGIN_SRC gnuplot :var data=table1 :file sundiv.png :results output
reset
plot data using 1:2 with lines title 'Trial Division', \
     data using 1:3 with lines title 'Sundaram';
#+END_SRC

#+RESULTS:
[[file:sundiv.png]]

