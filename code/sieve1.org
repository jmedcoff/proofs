#+TITLE: Sieve Code for Term Paper

#+BEGIN_SRC python :session
def eratosthenes(n):
    composites = set()
    for i in range(2, n+1):
        if i not in composites:
            yield i
            composites.update(range(i**2, n+1, i))
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
list(eratosthenes(100))
#+END_SRC

#+RESULTS:
| 2 | 3 | 5 | 7 | 11 | 13 | 17 | 19 | 23 | 29 | 31 | 37 | 41 | 43 | 47 | 53 | 59 | 61 | 67 | 71 | 73 | 79 | 83 | 89 | 97 |

#+BEGIN_SRC python :session
import time
def time_algo(algo, n):
    start = time.time()
    list(algo(n))
    end = time.time()
    return end-start

#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
time_algo(eratosthenes, 100)
#+END_SRC

#+RESULTS:
: 1.00135803223e-05

#+BEGIN_SRC python :session
def time_trial(algo, iterbl):
    avgtimes = []
    for i in iterbl:
        totaltime = 0
        for j in range(50):
            totaltime += time_algo(algo, i)
        avgtimes.append(totaltime/50)
    return [iterbl, avgtimes]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
time_trial(eratosthenes, range(1000, 100000, 1000))
#+END_SRC

#+name: table
#+RESULTS:
|  1000 | 0.0006204938888549805 |
|  2000 | 0.0012402725219726562 |
|  3000 | 0.0018289232254028321 |
|  4000 |  0.002449159622192383 |
|  5000 | 0.0030922508239746094 |
|  6000 | 0.0036451339721679686 |
|  7000 |  0.004556894302368164 |
|  8000 |  0.005112013816833496 |
|  9000 | 0.0058802938461303715 |
| 10000 |  0.006410918235778809 |
| 11000 |  0.007019548416137695 |
| 12000 |  0.007715458869934082 |
| 13000 |  0.008403992652893067 |
| 14000 |   0.00897909641265869 |
| 15000 |  0.009646291732788087 |
| 16000 |  0.010297346115112304 |
| 17000 |  0.011029839515686035 |
| 18000 |  0.011598925590515136 |
| 19000 |  0.012266755104064941 |
| 20000 |  0.013046073913574218 |
| 21000 |  0.013979396820068359 |
| 22000 |  0.014318461418151856 |
| 23000 |  0.015232591629028321 |
| 24000 |  0.015769972801208496 |
| 25000 |   0.01741681098937988 |
| 26000 |  0.018053174018859863 |
| 27000 |   0.01876530170440674 |
| 28000 |   0.01966792583465576 |
| 29000 |  0.020153083801269532 |
| 30000 |   0.02087478160858154 |
| 31000 |  0.021394681930541993 |
| 32000 |  0.022184123992919923 |
| 33000 |  0.022851037979125976 |
| 34000 |  0.023622760772705077 |
| 35000 |   0.02414520740509033 |
| 36000 |  0.024923005104064942 |
| 37000 |  0.025578861236572267 |
| 38000 |   0.02637303829193115 |
| 39000 |  0.027243900299072265 |
| 40000 |  0.027931323051452638 |
| 41000 |  0.028461737632751463 |
| 42000 |  0.029194164276123046 |
| 43000 |  0.030110106468200684 |
| 44000 |  0.030752925872802733 |
| 45000 |   0.03127076148986816 |
| 46000 |   0.03209580898284912 |
| 47000 |   0.03767722606658935 |
| 48000 |   0.03535704135894775 |
| 49000 |  0.035558767318725586 |
| 50000 |   0.03677845478057861 |
| 51000 |  0.037914824485778806 |
| 52000 |   0.03884580135345459 |
| 53000 |  0.040005664825439456 |
| 54000 |    0.0410725212097168 |
| 55000 |   0.04195728778839111 |
| 56000 |   0.04331957340240478 |
| 57000 |   0.04461510181427002 |
| 58000 |   0.04565912246704101 |
| 59000 |   0.04721619606018066 |
| 60000 |   0.04777389526367187 |
| 61000 |   0.04933491706848145 |
| 62000 |  0.050052223205566404 |
| 63000 |   0.05144604682922363 |
| 64000 |  0.052462005615234376 |
| 65000 |   0.05336606025695801 |
| 66000 |   0.05460372447967529 |
| 67000 |   0.05560472965240479 |
| 68000 |   0.05693681240081787 |
| 69000 |   0.05770868301391602 |
| 70000 |   0.05915668487548828 |
| 71000 |  0.060145816802978515 |
| 72000 |   0.06130792140960693 |
| 73000 |   0.06287449836730957 |
| 74000 |   0.06451545238494873 |
| 75000 |   0.06578813552856445 |
| 76000 |   0.06662975788116456 |
| 77000 |   0.06756335258483886 |
| 78000 |   0.06874766826629639 |
| 79000 |   0.06995229244232178 |
| 80000 |   0.07144810199737549 |
| 81000 |   0.07272812366485595 |
| 82000 |   0.07343842506408692 |
| 83000 |   0.07447246551513671 |
| 84000 |   0.07581564903259277 |
| 85000 |    0.0764389705657959 |
| 86000 |   0.07788610935211182 |
| 87000 |   0.07924787521362305 |
| 88000 |   0.08003894329071044 |
| 89000 |   0.08123160362243652 |
| 90000 |   0.08260021209716797 |
| 91000 |   0.08378377437591553 |
| 92000 |   0.08474624156951904 |
| 93000 |    0.0862812328338623 |
| 94000 |   0.08709643840789795 |
| 95000 |   0.08827361583709717 |
| 96000 |   0.08962028026580811 |
| 97000 |   0.09392363548278809 |
| 98000 |   0.09457951068878173 |
| 99000 |   0.09566825866699219 |



This table needs to be transposed pre-gnuplot.


#+BEGIN_SRC gnuplot :var data=table :file erat.png
reset
plot data using 1:2 with lines title 'Running Time (seconds)';
#+END_SRC

#+RESULTS:
[[file:erat.png]]

function to match: 1/244347 x log log x

#+BEGIN_SRC python :session
from math import log
def fitfcn(x):
    return x*log(log(x))/(244347.5)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
fitfcn(100000)

#+END_SRC

#+RESULTS:
: 0.999998100116

#+BEGIN_SRC python :session
def fitfcn_trial():
    output = []
    input = range(1000, 100000, 1000)
    for i in input:
        output.append(fitfcn(i))
    return [input, output]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session
fitfcn_trial()
#+END_SRC

#+name: table2
#+RESULTS:
|  1000 | 0.007909410711859403 |
|  2000 | 0.016601495697064914 |
|  3000 | 0.025540312518513002 |
|  4000 |  0.03463163481301039 |
|  5000 |   0.0438327965077917 |
|  6000 |  0.05311944459519007 |
|  7000 |  0.06247586253812833 |
|  8000 |  0.07189108917531166 |
|  9000 |   0.0813570570896446 |
| 10000 |  0.09086758842909572 |
| 11000 |   0.1004178058729079 |
| 12000 |  0.11000376456666572 |
| 13000 |  0.11962221045676855 |
| 14000 |  0.12927041515584412 |
| 15000 |   0.1389460593301545 |
| 16000 |  0.14864714804765272 |
| 17000 |   0.1583719478661593 |
| 18000 |  0.16811893912175258 |
| 19000 |  0.17788677910064818 |
| 20000 |  0.18767427316744872 |
| 21000 |  0.19748035181749257 |
| 22000 |  0.20730405221254988 |
| 23000 |    0.217144503159298 |
| 24000 |  0.22700091276641252 |
| 25000 |   0.2368725582105918 |
| 26000 |  0.24675877718100192 |
| 27000 |  0.25665896067273286 |
| 28000 |   0.2665725468743464 |
| 29000 |   0.2764990159501736 |
| 30000 |  0.28643788555997696 |
| 31000 |   0.2963887069906107 |
| 32000 |   0.3063510617989947 |
| 33000 |   0.3163245588849145 |
| 34000 |   0.3263088319272301 |
| 35000 |  0.33630353712899114 |
| 36000 |   0.3463083512264612 |
| 37000 |   0.3563229697246738 |
| 38000 |  0.36634710532830933 |
| 39000 |   0.3763804865416896 |
| 40000 |   0.3864228564157856 |
| 41000 |   0.3964739714235056 |
| 42000 |  0.40653360044731346 |
| 43000 |   0.4166015238655502 |
| 44000 |   0.4266775327257552 |
| 45000 |  0.43676142799491424 |
| 46000 |   0.4468530198779201 |
| 47000 |  0.45695212719669087 |
| 48000 |   0.4670585768233679 |
| 49000 |   0.4771722031618538 |
| 50000 |   0.4872928476726631 |
| 51000 |  0.49742035843667126 |
| 52000 |   0.5075545897538778 |
| 53000 |   0.5176954017737505 |
| 54000 |   0.5278426601541176 |
| 55000 |   0.5379962357459114 |
| 56000 |   0.5481560043013723 |
| 57000 |   0.5583218462035766 |
| 58000 |   0.5684936462153829 |
| 59000 |   0.5786712932460925 |
| 60000 |   0.5888546801342928 |
| 61000 |    0.599043703445512 |
| 62000 |   0.6092382632834465 |
| 63000 |   0.6194382631136458 |
| 64000 |   0.6296436095986502 |
| 65000 |   0.6398542124436668 |
| 66000 |   0.6500699842519598 |
| 67000 |   0.6602908403892065 |
| 68000 |   0.6705166988561327 |
| 69000 |   0.6807474801688154 |
| 70000 |   0.6909831072460778 |
| 71000 |   0.7012235053034694 |
| 72000 |   0.7114686017533505 |
| 73000 |    0.721718326110657 |
| 74000 |   0.7319726099039436 |
| 75000 |   0.7422313865913454 |
| 76000 |   0.7524945914811217 |
| 77000 |   0.7627621616564783 |
| 78000 |     0.77303403590438 |
| 79000 |   0.7833101546480998 |
| 80000 |   0.7935904598832575 |
| 81000 |    0.803874895117129 |
| 82000 |   0.8141634053110208 |
| 83000 |   0.8244559368255179 |
| 84000 |   0.8347524373684297 |
| 85000 |   0.8450528559452705 |
| 86000 |   0.8553571428121218 |
| 87000 |   0.8656652494307373 |
| 88000 |   0.8759771284257574 |
| 89000 |   0.8862927335439115 |
| 90000 |   0.8966120196150965 |
| 91000 |    0.906934942515221 |
| 92000 |   0.9172614591307229 |
| 93000 |   0.9275915273246599 |
| 94000 |   0.9379251059042941 |
| 95000 |   0.9482621545900853 |
| 96000 |   0.9586026339860185 |
| 97000 |   0.9689465055511973 |
| 98000 |   0.9792937315726301 |
| 99000 |   0.9896442751391586 |


#+BEGIN_SRC gnuplot :var data=table, data2=table2 :file erat2.png
reset
plot data using 1:2 with lines title 'Running Time (seconds)',
plot data2 using 1:2 with lines title '(1/244347)*x*log(log(x))';
#+END_SRC

#+RESULTS:
[[file:erat2.png]]

